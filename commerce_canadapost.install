<?php

/**
 * @file
 * Install file for Commerce Canada Post module.
 */

/**
 * Add Commerce Canada Post as a dependency to config files.
 */
function commerce_canadapost_update_8001() {
  $config_factory = \Drupal::configFactory();

  // Add dependency to Canada Post shipment type.
  $config = $config_factory->getEditable('commerce_shipping.commerce_shipment_type.canadapost');
  $config->set('dependencies.module', ['commerce_canadapost']);
  $config->set('dependencies.enforced.module', ['commerce_canadapost']);
  $config->save();

  // Add dependency to Canada Post field storage fields.
  $configs = [
    'field.storage.commerce_shipment.field_actual_delivery',
    'field.storage.commerce_shipment.field_attempted_delivery',
    'field.storage.commerce_shipment.field_expected_delivery',
    'field.storage.commerce_shipment.field_mailed_on',
  ];

  foreach ($configs as $config) {
    $config = $config_factory->getEditable($config);
    $config->set('dependencies.config', ['commerce_shipping.commerce_shipment_type.canadapost']);
    $config->save();
  }
}

/**
 * Copy Canada Post API sitewide settings to all existing store entities.
 */
function commerce_canadapost_update_8002() {
  $config_factory = \Drupal::configFactory();

  // Fetch the Canada Post API sitewide settings.
  $config_id = 'commerce_canadapost.settings';
  $config = $config_factory->get($config_id);

  /** @var \Drupal\commerce_canadapost\UtilitiesService $utilities_service */
  $utilities_service = \Drupal::service('commerce_canadapost.utilities_service');
  $values = [];
  foreach ($utilities_service->getApiKeys() as $key) {
    $values[$key] = $config->get("api.$key");
  }

  // Grab all existing stores.
  $stores = \Drupal::entityTypeManager()
    ->getStorage('commerce_store')
    ->loadMultiple(NULL);

  // Save the settings to the store.
  foreach ($stores as $store) {
    $store->set('canadapost_api_settings', json_encode($values));
    $store->save();
  }

  // Finally, delete the sitewide settings config.
  $config = $config_factory->getEditable($config_id);
  $config->delete();
}
